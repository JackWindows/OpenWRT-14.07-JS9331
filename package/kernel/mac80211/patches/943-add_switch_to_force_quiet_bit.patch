--- a/drivers/net/wireless/ath/ath9k/debug.c
+++ b/drivers/net/wireless/ath/ath9k/debug.c
@@ -961,6 +961,49 @@ void ath_debug_stat_rx(struct ath_softc
 	ath9k_cmn_debug_stat_rx(&sc->debug.stats.rxstats, rs);
 }
 
+static ssize_t read_force_quiet_bit_restore(struct file *file, char __user *user_buf,
+											size_t count, loff_t *ppos)
+{
+	struct ath_softc *sc = file->private_data;
+	char buf[32];
+	unsigned int len;
+
+	len = sprintf(buf, "%d\n", sc->sc_ah->force_quiet_bit_restore);
+	return simple_read_from_buffer(user_buf, count, ppos, buf, len);
+}
+
+static ssize_t write_force_quiet_bit_restore(struct file *file, char __user *user_buf,
+											size_t count, loff_t *ppos)
+{
+	struct ath_softc *sc = file->private_data;
+	struct ath_hw *ah = sc->sc_ah;
+	unsigned long force_quiet_bit_restore;
+	char buf[32];
+	ssize_t len;
+
+	len = min(count, sizeof(buf) - 1);
+	if (copy_from_user(buf, user_buf, len))
+		return -EFAULT;
+
+	buf[len] = '\0';
+	if (kstrtoul(buf, 0, &force_quiet_bit_restore))
+		return -EINVAL;
+
+	ah->force_quiet_bit_restore = !!force_quiet_bit_restore;
+
+	if (force_quiet_bit_restore)
+		REG_CLR_BIT(ah, AR_PCU_MISC, AR_PCU_FORCE_QUIET_COLL);
+	return count;
+}
+
+static const struct file_operations fops_force_quiet_bit = {
+	.read = read_force_quiet_bit_restore,
+	.write = write_force_quiet_bit_restore,
+	.open = simple_open,
+	.owner = THIS_MODULE,
+	.llseek = default_llseek,
+};
+
 static ssize_t read_file_regidx(struct file *file, char __user *user_buf,
                                 size_t count, loff_t *ppos)
 {
@@ -1534,8 +1577,12 @@ int ath9k_init_debug(struct ath_hw *ah)
 			   &sc->tx.txq_max_pending[IEEE80211_AC_VI]);
 	debugfs_create_u32("qlen_vo", S_IRUSR | S_IWUSR, sc->debug.debugfs_phy,
 			   &sc->tx.txq_max_pending[IEEE80211_AC_VO]);
-	debugfs_create_u32("force_quiet_bit_delay", S_IRUSR | S_IWUSR, sc->debug.debugfs_phy,
+	debugfs_create_u32("force_quiet_bit_delay", S_IRUSR | S_IWUSR,
+				sc->debug.debugfs_phy,
 				&ah->force_quiet_bit_delay);
+	debugfs_create_file("force_quiet_bit_restore", S_IRUSR | S_IWUSR,
+				sc->debug.debugfs_phy, sc,
+				&fops_force_quiet_bit);
 	debugfs_create_file("misc", S_IRUSR, sc->debug.debugfs_phy, sc,
 			    &fops_misc);
 	debugfs_create_file("reset", S_IRUSR, sc->debug.debugfs_phy, sc,
--- a/drivers/net/wireless/ath/ath9k/hw.h
+++ b/drivers/net/wireless/ath/ath9k/hw.h
@@ -745,6 +745,7 @@ struct ath_hw {
 
 	struct timeval last_puttxbuf;
 	u32 force_quiet_bit_delay;
+	bool force_quiet_bit_restore;
 	struct device *dev;
 	struct ieee80211_hw *hw;
 	struct ath_common common;
--- a/drivers/net/wireless/ath/ath9k/init.c
+++ b/drivers/net/wireless/ath/ath9k/init.c
@@ -500,6 +500,7 @@ static int ath9k_init_softc(u16 devid, s
 		return -ENOMEM;
 
 	ath9k_ah->force_quiet_bit_delay = 0;
+	ath9k_ah->force_quiet_bit_restore = true;
 	ath9k_ah->dev = sc->dev;
 	ath9k_ah->hw = sc->hw;
 	ath9k_ah->hw_version.devid = devid;
--- a/drivers/net/wireless/ath/ath9k/mac.c
+++ b/drivers/net/wireless/ath/ath9k/mac.c
@@ -56,7 +56,8 @@ void ath9k_hw_puttxbuf(struct ath_hw *ah
 	if (ah->force_quiet_bit_delay) {
 		udelay(ah->force_quiet_bit_delay);
 		REG_SET_BIT(ah, AR_PCU_MISC, AR_PCU_FORCE_QUIET_COLL);
-		REG_CLR_BIT(ah, AR_PCU_MISC, AR_PCU_FORCE_QUIET_COLL);
+		if (ah->force_quiet_bit_restore)
+			REG_CLR_BIT(ah, AR_PCU_MISC, AR_PCU_FORCE_QUIET_COLL);
 	}
 }
 EXPORT_SYMBOL(ath9k_hw_puttxbuf);
