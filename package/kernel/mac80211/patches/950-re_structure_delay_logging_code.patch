--- a/drivers/net/wireless/ath/ath9k/init.c
+++ b/drivers/net/wireless/ath/ath9k/init.c
@@ -503,7 +503,7 @@ static int ath9k_init_softc(u16 devid, s
 	ath9k_ah->force_quiet_bit_restore = true;
 	ath9k_ah->force_quiet_bit_restore_in = 0;
 	ath9k_ah->current_timing_count = 0;
-	ath9k_ah->max_timing_count = 1;
+	ath9k_ah->max_timing_count = 0;
 	ath9k_ah->eifs_equal_to_aifs = true;
 	ath9k_ah->dev = sc->dev;
 	ath9k_ah->hw = sc->hw;
--- a/drivers/net/wireless/ath/ath9k/mac.c
+++ b/drivers/net/wireless/ath/ath9k/mac.c
@@ -51,18 +51,16 @@ EXPORT_SYMBOL(ath9k_hw_gettxbuf);
 
 void ath9k_hw_puttxbuf(struct ath_hw *ah, u32 q, u32 txdp)
 {
-	if (q != ATH9K_NUM_TX_QUEUES - 1)	//exclude becon queue
-		getnstimeofday(&ah->last_puttxbuf[ah->current_timing_count++]);
+	getnstimeofday(&ah->last_puttxbuf);
 	REG_WRITE(ah, AR_QTXDP(q), txdp);
-	if (q != ATH9K_NUM_TX_QUEUES - 1) {
-		if (ah->force_quiet_bit_delay) {
-			udelay(ah->force_quiet_bit_delay);
-			REG_SET_BIT(ah, AR_PCU_MISC, AR_PCU_FORCE_QUIET_COLL);
-			if (ah->force_quiet_bit_restore) {
-				udelay(ah->force_quiet_bit_restore_in);
-				getnstimeofday(&ah->last_interrupt_tx[ah->current_timing_count - 1]);
-				REG_CLR_BIT(ah, AR_PCU_MISC, AR_PCU_FORCE_QUIET_COLL);
-			}
+	if (q != ATH9K_NUM_TX_QUEUES - 1	//exlcude beacon queue
+			&& ah->force_quiet_bit_delay) {
+		udelay(ah->force_quiet_bit_delay);
+		REG_SET_BIT(ah, AR_PCU_MISC, AR_PCU_FORCE_QUIET_COLL);
+		if (ah->force_quiet_bit_restore) {
+			udelay(ah->force_quiet_bit_restore_in);
+			getnstimeofday(&ah->last_force_quiet_restore);
+			REG_CLR_BIT(ah, AR_PCU_MISC, AR_PCU_FORCE_QUIET_COLL);
 		}
 	}
 }
--- a/drivers/net/wireless/ath/ath9k/xmit.c
+++ b/drivers/net/wireless/ath/ath9k/xmit.c
@@ -2552,6 +2552,7 @@ void ath_tx_edma_tasklet(struct ath_soft
 	struct ath_buf *bf, *lastbf;
 	struct list_head bf_head;
 	struct list_head *fifo_list;
+	struct timespec now_ts;
 	int status;
 
 	for (;;) {
@@ -2566,38 +2567,52 @@ void ath_tx_edma_tasklet(struct ath_soft
 			break;
 		}
 
+		getnstimeofday(&now_ts);	// get current time
+
 		/* Process beacon completions separately */
 		if (ts.qid == sc->beacon.beaconq) {
 			sc->beacon.tx_processed = true;
 			sc->beacon.tx_last = !(ts.ts_status & ATH9K_TXERR_MASK);
 
 			ath9k_csa_update(sc);
+			ah->last_txok_irq = now_ts;
 			continue;
 		}
 
-		struct timespec now_ts, diff, diff2;
+		if (ah->current_timing_count < ah->max_timing_count) {
 
-		getnstimeofday(&now_ts);	// get current time
-		/* get the diff since last put tx buf and restore quiet collision */
-		diff = timespec_sub(now_ts, ah->last_puttxbuf[ah->current_timing_count - 1]);
-		ah->last_puttxbuf[ah->current_timing_count - 1] = diff;
-		diff2 = timespec_sub(now_ts, ah->last_interrupt_tx[ah->current_timing_count - 1]);
-		ah->last_interrupt_tx[ah->current_timing_count - 1] = diff2;
+			/* get the diff since last put tx buf and restore quiet collision */
+			ah->since_last_txok[ah->current_timing_count] =
+				timespec_sub(now_ts, ah->last_txok_irq);
+			ah->puttxbuf_delay[ah->current_timing_count] =
+				timespec_sub(now_ts, ah->last_puttxbuf);
+			if (ah->force_quiet_bit_restore)
+				ah->force_quiet_restore_delay[ah->current_timing_count] =
+					timespec_sub(now_ts, ah->last_force_quiet_restore);
+			ah->current_timing_count++;
+			ah->last_txok_irq = now_ts;
+		}
 		/* if reach max_timing_count then output kernel log */
-		if (ah->current_timing_count >= ah->max_timing_count) {
+		if (ah->current_timing_count >= ah->max_timing_count && ah->current_timing_count) {
 			int i;
 			for (i = 0; i < ah->current_timing_count; i++) {
-				diff = ah->last_puttxbuf[i];
-				diff2 = ah->last_interrupt_tx[i];
-				if (!ah->force_quiet_bit_restore || ah->force_quiet_bit_delay == 0)
-					ath_dbg(common, TXDELAY, "time since put tx buf %4ldus\n",
-							diff.tv_sec * 1000000 + diff.tv_nsec / 1000);
+				if (!ah->force_quiet_bit_restore)
+					ath_dbg(common, TXDELAY, "time since put tx buf %4ldus, last txok %4ldus\n",
+							ah->puttxbuf_delay[i].tv_sec * 1000000
+								+ ah->puttxbuf_delay[i].tv_nsec / 1000,
+							ah->since_last_txok[i].tv_sec * 1000000
+								+ ah->since_last_txok[i].tv_nsec / 1000);
 				else
 					ath_dbg(common, TXDELAY,
-							"time since put tx buf %4ldus, force_quiet_bit %4ldus\n",
-							diff.tv_sec * 1000000 + diff.tv_nsec / 1000,
-							diff2.tv_sec * 1000000 + diff2.tv_nsec / 1000);
+							"time since put tx buf %4ldus, force_quiet_bit %4ldus, last txok %4ldus\n",
+							ah->puttxbuf_delay[i].tv_sec * 1000000
+								+ ah->puttxbuf_delay[i].tv_nsec / 1000,
+							ah->force_quiet_restore_delay[i].tv_sec * 1000000
+								+ ah->force_quiet_restore_delay[i].tv_nsec / 1000,
+							ah->since_last_txok[i].tv_sec * 1000000
+								+ ah->since_last_txok[i].tv_nsec / 1000);
 			}
+			ah->max_timing_count = 0;
 			ah->current_timing_count = 0;
 		}
 
--- a/drivers/net/wireless/ath/ath9k/hw.h
+++ b/drivers/net/wireless/ath/ath9k/hw.h
@@ -743,8 +743,15 @@ enum ath_cal_list {
 struct ath_hw {
 	struct ath_ops reg_ops;
 
-	struct timespec last_puttxbuf[1000];
-	struct timespec last_interrupt_tx[1000];
+	struct timespec last_puttxbuf;
+	struct timespec last_force_quiet_restore;
+	struct timespec last_txok_irq;
+	/* log the delay between puttxbuf and txok IRQ */
+	struct timespec puttxbuf_delay[1000];
+	/* log the delay between restore force quiet bit and txok IRQ */
+	struct timespec force_quiet_restore_delay[1000];
+	/* log the delay between two txok IRQs */
+	struct timespec since_last_txok[1000];
 	u32 current_timing_count;
 	u32 max_timing_count;
 	u32 force_quiet_bit_delay;
